
@{
    ViewData["Title"] = "Statistics";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Statistics</h2>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://d3js.org/d3.v6.min.js"></script>

<div class="col-sm-4">
    <h4>Instrument Types Average Prices</h4>
    <hr />
    <div id="typeAveragePriceChartContainer" style="width:200px; height:200px"></div>

    <h4>Instrument Types Count</h4>
    <div id="typeCountChartContainer" style="width:200px; height:200px"></div>
</div>

<script>
    function drawBar(data, id) {
        var margin = { top: 20, right: 20, bottom: 30, left: 40 },
            width = 500 - margin.left - margin.right,
            height = 300 - margin.top - margin.bottom;
            var color = d3.schemeCategory10;

            var x = d3.scaleBand()
                .range([0, width])
                .padding(0.1);
            var y = d3.scaleLinear()
            .range([height, 0]);

            var svg = d3.select("#" + id).append("svg")
                    .attr("width", width + margin.left + margin.right)
                    .attr("height", height + margin.top + margin.bottom)
                    .append("g")
                    .attr("transform",
                            "translate(" + margin.left + "," + margin.top + ")");
            // Scale the range of the data in the domains
            x.domain(data.map(function (d, i) { return i}));
            y.domain([0, d3.max(data, function (d) { return d.value; })]);
            //margin = 200,
            //width = svg.attr("width") - margin,
            //height = svg.attr("height") - margin;

             svg.append('g').selectAll('rect')
            .data(data)
            .enter().append("rect")
            .attr("class", "bar")
            .attr("x", function(d,i) { return x(i); })
            .attr("width", x.bandwidth())
            .attr("y", function(d, i) { return y(d.value); })
            .attr("height", function(d) { return height - y(d.value); })
            .attr('fill', function(d, i) { return color[i]; });
            var g = svg.append("g")
                       .attr("transform", "translate(" + 100 + "," + 100 + ")");
             // add the x Axis
            svg.append("g")
                .attr("transform", "translate(0," + height + ")")
                .call(d3.axisBottom(x).tickFormat(function (d) { return data[d].name; }));           

            // add the y Axis
            svg.append("g")
                .call(d3.axisLeft(y))
                .append("text")
                .attr("transform", "rotate(-90)")
                .attr("y", 6)
                .attr("dy", "-35px")
                .text("Average price");
        }
    
    $.ajax({
        method: 'get',
        url: '/api/statistics/types/prices',
        success: (res) => {
            data = JSON.parse(res)
            console.log(data)
            drawBar(data, "typeAveragePriceChartContainer")

        }
    })
    $.ajax({
        method: 'get',
        url: '/api/statistics/types/count',
        success: (res) => {
            data = JSON.parse(res)
            console.log(data)
            drawBar(data,"typeCountChartContainer")
        }
    })
</script>